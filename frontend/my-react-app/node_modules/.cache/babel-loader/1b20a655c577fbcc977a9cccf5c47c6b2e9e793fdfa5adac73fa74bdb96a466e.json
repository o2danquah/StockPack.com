{"ast":null,"code":"function Validation(logs) {\n  let errors = {};\n  const email_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]){8,15}$/;\n  if (logs.email === \"\") {\n    errors.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(logs.email)) {\n    errors.email = \"Email does not match\";\n  } else {\n    errors.email = \"\";\n  }\n  if (logs.pass === \"\") {\n    errors.pass = \"Password should not be empty\";\n  } else if (!password_pattern.test(logs.pass)) {\n    errors.pass = \"Password does not match\";\n  } else {\n    errors.pass = \"\";\n  }\n  return errors;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","logs","errors","email_pattern","password_pattern","email","test","pass","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/Stocks/frontend/my-react-app/src/components/validation.js"],"sourcesContent":["function Validation(logs){\n   let errors = {};\n\n    const email_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]){8,15}$/\n\n\n    if(logs.email === \"\"){\n        errors.email = \"Name should not be empty\"\n    }\n\n    else if(!email_pattern.test(logs.email)){\n        errors.email = \"Email does not match\"\n    }\n    else{\n        errors.email = \"\"\n    }\n\n\n    if(logs.pass === \"\"){\n        errors.pass = \"Password should not be empty\"\n    }\n\n    else if(!password_pattern.test(logs.pass)){\n        errors.pass = \"Password does not match\"\n    }\n    else{\n        errors.pass = \"\"\n    }\n    \n\n    return errors\n\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,IAAI,EAAC;EACtB,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAG,2JAA2J;EACjL,MAAMC,gBAAgB,GAAG,0DAA0D;EAGnF,IAAGH,IAAI,CAACI,KAAK,KAAK,EAAE,EAAC;IACjBH,MAAM,CAACG,KAAK,GAAG,0BAA0B;EAC7C,CAAC,MAEI,IAAG,CAACF,aAAa,CAACG,IAAI,CAACL,IAAI,CAACI,KAAK,CAAC,EAAC;IACpCH,MAAM,CAACG,KAAK,GAAG,sBAAsB;EACzC,CAAC,MACG;IACAH,MAAM,CAACG,KAAK,GAAG,EAAE;EACrB;EAGA,IAAGJ,IAAI,CAACM,IAAI,KAAK,EAAE,EAAC;IAChBL,MAAM,CAACK,IAAI,GAAG,8BAA8B;EAChD,CAAC,MAEI,IAAG,CAACH,gBAAgB,CAACE,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,EAAC;IACtCL,MAAM,CAACK,IAAI,GAAG,yBAAyB;EAC3C,CAAC,MACG;IACAL,MAAM,CAACK,IAAI,GAAG,EAAE;EACpB;EAGA,OAAOL,MAAM;AAEjB;AAACM,EAAA,GAjCQR,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}