{"ast":null,"code":"function Validation(logs) {\n  let error = {};\n  const email_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]){8,}$/;\n  if (logs.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(logs.email)) {\n    error.email = \"Email does not match\";\n  } else {\n    error.email = \"\";\n  }\n  if (logs.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!email_pattern.test(logs.email)) {\n    error.password = \"Password does not match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","logs","error","email_pattern","password_pattern","email","test","password","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/Stocks/frontend/my-react-app/src/components/validation.js"],"sourcesContent":["function Validation(logs){\n   let error = {};\n\n    const email_pattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9]){8,}$/\n\n\n    if(logs.email === \"\"){\n        error.email = \"Name should not be empty\"\n    }\n\n    else if(!email_pattern.test(logs.email)){\n        error.email = \"Email does not match\"\n    }\n    else{\n        error.email = \"\"\n    }\n\n\n    if(logs.password === \"\"){\n        error.password = \"Password should not be empty\"\n    }\n\n    else if(!email_pattern.test(logs.email)){\n        error.password = \"Password does not match\"\n    }\n    else{\n        error.password = \"\"\n    }\n    \n\n    return error\n\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,IAAI,EAAC;EACtB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEb,MAAMC,aAAa,GAAG,2JAA2J;EACjL,MAAMC,gBAAgB,GAAG,wDAAwD;EAGjF,IAAGH,IAAI,CAACI,KAAK,KAAK,EAAE,EAAC;IACjBH,KAAK,CAACG,KAAK,GAAG,0BAA0B;EAC5C,CAAC,MAEI,IAAG,CAACF,aAAa,CAACG,IAAI,CAACL,IAAI,CAACI,KAAK,CAAC,EAAC;IACpCH,KAAK,CAACG,KAAK,GAAG,sBAAsB;EACxC,CAAC,MACG;IACAH,KAAK,CAACG,KAAK,GAAG,EAAE;EACpB;EAGA,IAAGJ,IAAI,CAACM,QAAQ,KAAK,EAAE,EAAC;IACpBL,KAAK,CAACK,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAEI,IAAG,CAACJ,aAAa,CAACG,IAAI,CAACL,IAAI,CAACI,KAAK,CAAC,EAAC;IACpCH,KAAK,CAACK,QAAQ,GAAG,yBAAyB;EAC9C,CAAC,MACG;IACAL,KAAK,CAACK,QAAQ,GAAG,EAAE;EACvB;EAGA,OAAOL,KAAK;AAEhB;AAACM,EAAA,GAjCQR,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}